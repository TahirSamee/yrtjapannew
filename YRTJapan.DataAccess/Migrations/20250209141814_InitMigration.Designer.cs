// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YRTJapan.DataAccess.Data;

#nullable disable

namespace YRTJapan.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250209141814_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            ConcurrencyStamp = "bde251de-911c-4792-87b3-c0ddb316472e",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            ConcurrencyStamp = "edb01137-5928-4be1-802c-491ae2e685ef",
                            Name = "Employee",
                            NormalizedName = "EMPLOYEE"
                        },
                        new
                        {
                            Id = "3",
                            ConcurrencyStamp = "fd6ab8b6-625f-461c-b42f-3a240968c20d",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = "4",
                            ConcurrencyStamp = "2ce4f3de-fef9-4116-93b7-8bf2dab7fb0e",
                            Name = "DataEntryOperator",
                            NormalizedName = "DATAENTRYOPERATOR"
                        },
                        new
                        {
                            Id = "5",
                            ConcurrencyStamp = "e926e944-04de-446d-8fa0-bb0399d8f5dd",
                            Name = "Sale",
                            NormalizedName = "SALE"
                        },
                        new
                        {
                            Id = "6",
                            ConcurrencyStamp = "d32def81-5ae2-4a87-b802-03a63af4d159",
                            Name = "Accountant",
                            NormalizedName = "ACCOUNTANT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "c36b1412-230b-423c-a562-d8daae6d69bd",
                            RoleId = "1"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("YRTJapan.Core.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c36b1412-230b-423c-a562-d8daae6d69bd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "52008a65-17db-473b-93e1-b6d1a1400548",
                            CountryId = 1,
                            Email = "waheedtariq@msn.com",
                            EmailConfirmed = true,
                            FullName = "Waheed Tariq",
                            Gender = "Male",
                            LockoutEnabled = false,
                            NormalizedEmail = "WAHEEDTARIQ@MSN.COM",
                            NormalizedUserName = "WAHEEDTARIQ@MSN.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHOgCpIrCJh4234ZcBgbLZth+L+MPLOx6UNIZTR2Mld/XRm2mGvqEWFmmbjigPLrGw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "waheedtariq@msn.com"
                        });
                });

            modelBuilder.Entity("YRTJapan.Core.Category", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e680871-5437-4bea-89a6-fc050f006953"),
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6391),
                            DisplayOrder = 1,
                            Name = "Scifi",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6404)
                        },
                        new
                        {
                            Id = new Guid("5b81b2f2-8cd8-467b-977b-665f46ab18d1"),
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6425),
                            DisplayOrder = 2,
                            Name = "Action",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6425)
                        },
                        new
                        {
                            Id = new Guid("a589d649-2559-421d-9297-eab259f4ab6e"),
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6426),
                            DisplayOrder = 3,
                            Name = "History",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6427)
                        });
                });

            modelBuilder.Entity("YRTJapan.Core.Company", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("253afcbf-2d3b-467b-a4b6-6b35f3dfc0ea"),
                            City = "Tech City",
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6488),
                            Name = "Tech Solution",
                            PhoneNumber = "6669990000",
                            PostalCode = "12121",
                            State = "IL",
                            StreetAddress = "123 Tech St",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6488)
                        },
                        new
                        {
                            Id = new Guid("28075343-cb4d-4c71-b5ea-d750b55d4a96"),
                            City = "Vid City",
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6495),
                            Name = "Vivid Books",
                            PhoneNumber = "7779990000",
                            PostalCode = "66666",
                            State = "IL",
                            StreetAddress = "999 Vid St",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6495)
                        },
                        new
                        {
                            Id = new Guid("c9b63938-caea-4f78-9a17-7335364a9fc2"),
                            City = "Lala land",
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6498),
                            Name = "Readers Club",
                            PhoneNumber = "1113335555",
                            PostalCode = "99999",
                            State = "NY",
                            StreetAddress = "999 Main St",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6498)
                        });
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.API_Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("APIKey")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("API_Configuration");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.API_Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("APIEndpoint")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ResponseTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("API_Log");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.Car", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AUCTION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AUCTION_DATE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AUCTION_TYPE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AVG_PRICE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AVG_STRING")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COLOR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENG_V")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EQUIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FINISH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GRADE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMAGES")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KPP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KPP_TYPE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KUZOV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MARKA_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MARKA_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MILEAGE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MODEL_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MODEL_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRIV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PW")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RATE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("START")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STATUS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TAG2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TOWN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YEAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.DashboardSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("SettingJSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DashboardSetting");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.Favourite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MakeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.FreeQuote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FreeQuotes");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.Inquiry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Inquiry");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("SalePrice")
                        .HasColumnType("real");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.YRTBankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Address")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasColumnType("VARCHAR(25)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("SwiftCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Telex")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("YRTBankAccount");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.YRTClientTestimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVarified")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImg")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<int>("UserScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("YRTClientTestimonial");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.YRTConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfigDesc")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("ConfigValue")
                        .IsRequired()
                        .HasColumnType("CHAR(1)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("YRTConfiguration");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.YRTCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("VARCHAR(5)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LogoImg")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("YRTCountry");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "DZ",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7399),
                            IsActive = false,
                            LogoImg = "/images/countries/Algeria.jpg",
                            Name = "Algeria"
                        },
                        new
                        {
                            Id = 2,
                            Code = "AO",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7425),
                            IsActive = false,
                            LogoImg = "/images/countries/Angola.jpg",
                            Name = "Angola"
                        },
                        new
                        {
                            Id = 3,
                            Code = "AI",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7427),
                            IsActive = false,
                            LogoImg = "/images/countries/Anguilla.jpg",
                            Name = "Anguilla"
                        },
                        new
                        {
                            Id = 4,
                            Code = "AG",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7428),
                            IsActive = false,
                            LogoImg = "/images/countries/Antigua.jpg",
                            Name = "Antigua"
                        },
                        new
                        {
                            Id = 5,
                            Code = "AM",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7430),
                            IsActive = false,
                            LogoImg = "/images/countries/Armenia.jpg",
                            Name = "Armenia"
                        },
                        new
                        {
                            Id = 6,
                            Code = "AW",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7430),
                            IsActive = false,
                            LogoImg = "/images/countries/Aruba.jpg",
                            Name = "Aruba"
                        },
                        new
                        {
                            Id = 7,
                            Code = "AU",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7432),
                            IsActive = false,
                            LogoImg = "/images/countries/Australia.jpg",
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 8,
                            Code = "AZ",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7433),
                            IsActive = false,
                            LogoImg = "/images/countries/Azerbaijan.jpg",
                            Name = "Azerbaijan"
                        },
                        new
                        {
                            Id = 9,
                            Code = "BS",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7434),
                            IsActive = false,
                            LogoImg = "/images/countries/Bahamas.jpg",
                            Name = "Bahamas"
                        },
                        new
                        {
                            Id = 10,
                            Code = "BH",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7435),
                            IsActive = false,
                            LogoImg = "/images/countries/Bahrain.jpg",
                            Name = "Bahrain"
                        },
                        new
                        {
                            Id = 11,
                            Code = "BD",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7436),
                            IsActive = false,
                            LogoImg = "/images/countries/Bangladesh.jpg",
                            Name = "Bangladesh"
                        },
                        new
                        {
                            Id = 12,
                            Code = "BB",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7437),
                            IsActive = false,
                            LogoImg = "/images/countries/Barbados.jpg",
                            Name = "Barbados"
                        },
                        new
                        {
                            Id = 13,
                            Code = "BE",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7437),
                            IsActive = false,
                            LogoImg = "/images/countries/Belgium.jpg",
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = 14,
                            Code = "BJ",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7438),
                            IsActive = false,
                            LogoImg = "/images/countries/Benin.jpg",
                            Name = "Benin"
                        },
                        new
                        {
                            Id = 15,
                            Code = "BM",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7440),
                            IsActive = false,
                            LogoImg = "/images/countries/Bermuda.jpg",
                            Name = "Bermuda"
                        },
                        new
                        {
                            Id = 16,
                            Code = "BO",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7441),
                            IsActive = false,
                            LogoImg = "/images/countries/Bolivia.jpg",
                            Name = "Bolivia"
                        },
                        new
                        {
                            Id = 17,
                            Code = "BW",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7441),
                            IsActive = false,
                            LogoImg = "/images/countries/Botswana.jpg",
                            Name = "Botswana"
                        },
                        new
                        {
                            Id = 18,
                            Code = "VG",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7442),
                            IsActive = false,
                            LogoImg = "/images/countries/British_Virgin_Islands.jpg",
                            Name = "British Virgin Islands"
                        },
                        new
                        {
                            Id = 19,
                            Code = "BN",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7448),
                            IsActive = false,
                            LogoImg = "/images/countries/Brunei.jpg",
                            Name = "Brunei"
                        },
                        new
                        {
                            Id = 20,
                            Code = "BG",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7448),
                            IsActive = false,
                            LogoImg = "/images/countries/Bulgaria.jpg",
                            Name = "Bulgaria"
                        },
                        new
                        {
                            Id = 21,
                            Code = "BF",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7449),
                            IsActive = false,
                            LogoImg = "/images/countries/Burkina_Faso.jpg",
                            Name = "Burkina Faso"
                        },
                        new
                        {
                            Id = 22,
                            Code = "BI",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7450),
                            IsActive = false,
                            LogoImg = "/images/countries/Burundi.jpg",
                            Name = "Burundi"
                        },
                        new
                        {
                            Id = 23,
                            Code = "KH",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7451),
                            IsActive = false,
                            LogoImg = "/images/countries/Cambodia.jpg",
                            Name = "Cambodia"
                        },
                        new
                        {
                            Id = 24,
                            Code = "CM",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7452),
                            IsActive = false,
                            LogoImg = "/images/countries/Cameroon.jpg",
                            Name = "Cameroon"
                        },
                        new
                        {
                            Id = 25,
                            Code = "CA",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7453),
                            IsActive = false,
                            LogoImg = "/images/countries/Canada.jpg",
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 26,
                            Code = "KY",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7454),
                            IsActive = false,
                            LogoImg = "/images/countries/Cayman_Islands.jpg",
                            Name = "Cayman Islands"
                        },
                        new
                        {
                            Id = 27,
                            Code = "CL",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7454),
                            IsActive = false,
                            LogoImg = "/images/countries/Chile.jpg",
                            Name = "Chile"
                        },
                        new
                        {
                            Id = 28,
                            Code = "CO",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7455),
                            IsActive = false,
                            LogoImg = "/images/countries/Colombia.jpg",
                            Name = "Colombia"
                        },
                        new
                        {
                            Id = 29,
                            Code = "DM",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7457),
                            IsActive = false,
                            LogoImg = "/images/countries/Commonwealth_of_Dominica.jpg",
                            Name = "Commonwealth of Dominica"
                        },
                        new
                        {
                            Id = 30,
                            Code = "KM",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7459),
                            IsActive = false,
                            LogoImg = "/images/countries/Comoros.jpg",
                            Name = "Comoros"
                        },
                        new
                        {
                            Id = 31,
                            Code = "CK",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7460),
                            IsActive = false,
                            LogoImg = "/images/countries/Cook_Islands.jpg",
                            Name = "Cook Islands"
                        },
                        new
                        {
                            Id = 32,
                            Code = "CR",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7461),
                            IsActive = false,
                            LogoImg = "/images/countries/Costa_Rica.jpg",
                            Name = "Costa Rica"
                        },
                        new
                        {
                            Id = 33,
                            Code = "CI",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7462),
                            IsActive = false,
                            LogoImg = "/images/countries/Cote_d'Ivoire.jpg",
                            Name = "Cote d'Ivoire"
                        },
                        new
                        {
                            Id = 34,
                            Code = "HR",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7463),
                            IsActive = false,
                            LogoImg = "/images/countries/Croatia.jpg",
                            Name = "Croatia"
                        },
                        new
                        {
                            Id = 35,
                            Code = "CY",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7464),
                            IsActive = false,
                            LogoImg = "/images/countries/Cyprus.jpg",
                            Name = "Cyprus"
                        },
                        new
                        {
                            Id = 36,
                            Code = "DK",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7465),
                            IsActive = false,
                            LogoImg = "/images/countries/Denmark.jpg",
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = 37,
                            Code = "DJ",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7466),
                            IsActive = false,
                            LogoImg = "/images/countries/Djibouti.jpg",
                            Name = "Djibouti"
                        },
                        new
                        {
                            Id = 38,
                            Code = "DO",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7466),
                            IsActive = false,
                            LogoImg = "/images/countries/Dominican_Republic.jpg",
                            Name = "Dominican Republic"
                        },
                        new
                        {
                            Id = 39,
                            Code = "CD",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7467),
                            IsActive = false,
                            LogoImg = "/images/countries/DR_Congo.jpg",
                            Name = "DR Congo"
                        },
                        new
                        {
                            Id = 40,
                            Code = "TL",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7468),
                            IsActive = false,
                            LogoImg = "/images/countries/East_Timor.jpg",
                            Name = "East Timor"
                        },
                        new
                        {
                            Id = 41,
                            Code = "EG",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7776),
                            IsActive = false,
                            LogoImg = "/images/countries/Egypt.jpg",
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = 42,
                            Code = "SV",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7778),
                            IsActive = false,
                            LogoImg = "/images/countries/El_Salvador.jpg",
                            Name = "El Salvador"
                        },
                        new
                        {
                            Id = 43,
                            Code = "GB",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7779),
                            IsActive = false,
                            LogoImg = "/images/countries/United_Kingdom.jpg",
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 44,
                            Code = "EE",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7780),
                            IsActive = false,
                            LogoImg = "/images/countries/Estonia.jpg",
                            Name = "Estonia"
                        },
                        new
                        {
                            Id = 45,
                            Code = "SZ",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7781),
                            IsActive = false,
                            LogoImg = "/images/countries/Eswatini.jpg",
                            Name = "Eswatini"
                        },
                        new
                        {
                            Id = 46,
                            Code = "ET",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7781),
                            IsActive = false,
                            LogoImg = "/images/countries/Ethiopia.jpg",
                            Name = "Ethiopia"
                        },
                        new
                        {
                            Id = 47,
                            Code = "FJ",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7782),
                            IsActive = false,
                            LogoImg = "/images/countries/Fiji.jpg",
                            Name = "Fiji"
                        },
                        new
                        {
                            Id = 48,
                            Code = "FI",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7783),
                            IsActive = false,
                            LogoImg = "/images/countries/Finland.jpg",
                            Name = "Finland"
                        },
                        new
                        {
                            Id = 49,
                            Code = "FR",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7784),
                            IsActive = false,
                            LogoImg = "/images/countries/France.jpg",
                            Name = "France"
                        },
                        new
                        {
                            Id = 50,
                            Code = "PF",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7785),
                            IsActive = false,
                            LogoImg = "/images/countries/French_Polynesia.jpg",
                            Name = "French Polynesia"
                        },
                        new
                        {
                            Id = 51,
                            Code = "GA",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7785),
                            IsActive = false,
                            LogoImg = "/images/countries/Gabon.jpg",
                            Name = "Gabon"
                        },
                        new
                        {
                            Id = 52,
                            Code = "GM",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7786),
                            IsActive = false,
                            LogoImg = "/images/countries/Gambia.jpg",
                            Name = "Gambia"
                        },
                        new
                        {
                            Id = 53,
                            Code = "GE",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7787),
                            IsActive = false,
                            LogoImg = "/images/countries/Georgia.jpg",
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = 54,
                            Code = "DE",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7788),
                            IsActive = false,
                            LogoImg = "/images/countries/Germany.jpg",
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 55,
                            Code = "GH",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7789),
                            IsActive = false,
                            LogoImg = "/images/countries/Ghana.jpg",
                            Name = "Ghana"
                        },
                        new
                        {
                            Id = 56,
                            Code = "GD",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7790),
                            IsActive = false,
                            LogoImg = "/images/countries/Grenada.jpg",
                            Name = "Grenada"
                        },
                        new
                        {
                            Id = 57,
                            Code = "GP",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7790),
                            IsActive = false,
                            LogoImg = "/images/countries/Guadeloupe.jpg",
                            Name = "Guadeloupe"
                        },
                        new
                        {
                            Id = 58,
                            Code = "GU",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7791),
                            IsActive = false,
                            LogoImg = "/images/countries/Guam.jpg",
                            Name = "Guam"
                        },
                        new
                        {
                            Id = 59,
                            Code = "GT",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7792),
                            IsActive = false,
                            LogoImg = "/images/countries/Guatemala.jpg",
                            Name = "Guatemala"
                        },
                        new
                        {
                            Id = 60,
                            Code = "GN",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7793),
                            IsActive = false,
                            LogoImg = "/images/countries/Guinea.jpg",
                            Name = "Guinea"
                        },
                        new
                        {
                            Id = 61,
                            Code = "GW",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7794),
                            IsActive = false,
                            LogoImg = "/images/countries/Guinea-Bissau.jpg",
                            Name = "Guinea-Bissau"
                        },
                        new
                        {
                            Id = 62,
                            Code = "GY",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7795),
                            IsActive = false,
                            LogoImg = "/images/countries/Guyana.jpg",
                            Name = "Guyana"
                        },
                        new
                        {
                            Id = 63,
                            Code = "HT",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7795),
                            IsActive = false,
                            LogoImg = "/images/countries/Haiti.jpg",
                            Name = "Haiti"
                        },
                        new
                        {
                            Id = 64,
                            Code = "HN",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7796),
                            IsActive = false,
                            LogoImg = "/images/countries/Honduras.jpg",
                            Name = "Honduras"
                        },
                        new
                        {
                            Id = 65,
                            Code = "HK",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7797),
                            IsActive = false,
                            LogoImg = "/images/countries/Hong_Kong.jpg",
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = 66,
                            Code = "IS",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7798),
                            IsActive = false,
                            LogoImg = "/images/countries/Iceland.jpg",
                            Name = "Iceland"
                        },
                        new
                        {
                            Id = 67,
                            Code = "IN",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7799),
                            IsActive = false,
                            LogoImg = "/images/countries/India.jpg",
                            Name = "India"
                        },
                        new
                        {
                            Id = 68,
                            Code = "ID",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7800),
                            IsActive = false,
                            LogoImg = "/images/countries/Indonesia.jpg",
                            Name = "Indonesia"
                        },
                        new
                        {
                            Id = 69,
                            Code = "IE",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7801),
                            IsActive = false,
                            LogoImg = "/images/countries/Ireland.jpg",
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = 70,
                            Code = "IT",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7801),
                            IsActive = false,
                            LogoImg = "/images/countries/Italy.jpg",
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 71,
                            Code = "JM",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7802),
                            IsActive = false,
                            LogoImg = "/images/countries/Jamaica.jpg",
                            Name = "Jamaica"
                        },
                        new
                        {
                            Id = 72,
                            Code = "JO",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7803),
                            IsActive = false,
                            LogoImg = "/images/countries/Jordan.jpg",
                            Name = "Jordan"
                        },
                        new
                        {
                            Id = 73,
                            Code = "KZ",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7804),
                            IsActive = false,
                            LogoImg = "/images/countries/Kazakhstan.jpg",
                            Name = "Kazakhstan"
                        },
                        new
                        {
                            Id = 74,
                            Code = "KE",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7805),
                            IsActive = false,
                            LogoImg = "/images/countries/Kenya.jpg",
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = 75,
                            Code = "KI",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7805),
                            IsActive = false,
                            LogoImg = "/images/countries/Kiribati.jpg",
                            Name = "Kiribati"
                        },
                        new
                        {
                            Id = 76,
                            Code = "KW",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7806),
                            IsActive = false,
                            LogoImg = "/images/countries/Kuwait.jpg",
                            Name = "Kuwait"
                        },
                        new
                        {
                            Id = 77,
                            Code = "KG",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7807),
                            IsActive = false,
                            LogoImg = "/images/countries/Kyrgyzstan.jpg",
                            Name = "Kyrgyzstan"
                        },
                        new
                        {
                            Id = 78,
                            Code = "LB",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7808),
                            IsActive = false,
                            LogoImg = "/images/countries/Lebanon.jpg",
                            Name = "Lebanon"
                        },
                        new
                        {
                            Id = 79,
                            Code = "LS",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7808),
                            IsActive = false,
                            LogoImg = "/images/countries/Lesotho.jpg",
                            Name = "Lesotho"
                        },
                        new
                        {
                            Id = 80,
                            Code = "LR",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7809),
                            IsActive = false,
                            LogoImg = "/images/countries/Liberia.jpg",
                            Name = "Liberia"
                        },
                        new
                        {
                            Id = 81,
                            Code = "LY",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7888),
                            IsActive = false,
                            LogoImg = "/images/countries/Libya.jpg",
                            Name = "Libya"
                        },
                        new
                        {
                            Id = 82,
                            Code = "MG",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7888),
                            IsActive = false,
                            LogoImg = "/images/countries/Madagascar.jpg",
                            Name = "Madagascar"
                        },
                        new
                        {
                            Id = 83,
                            Code = "MW",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7889),
                            IsActive = false,
                            LogoImg = "/images/countries/Malawi.jpg",
                            Name = "Malawi"
                        },
                        new
                        {
                            Id = 84,
                            Code = "MY",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7890),
                            IsActive = false,
                            LogoImg = "/images/countries/Malaysia.jpg",
                            Name = "Malaysia"
                        },
                        new
                        {
                            Id = 85,
                            Code = "MV",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7891),
                            IsActive = false,
                            LogoImg = "/images/countries/Maldives.jpg",
                            Name = "Maldives"
                        },
                        new
                        {
                            Id = 86,
                            Code = "ML",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7915),
                            IsActive = false,
                            LogoImg = "/images/countries/Mali.jpg",
                            Name = "Mali"
                        },
                        new
                        {
                            Id = 87,
                            Code = "MT",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7916),
                            IsActive = false,
                            LogoImg = "/images/countries/Malta.jpg",
                            Name = "Malta"
                        },
                        new
                        {
                            Id = 88,
                            Code = "MH",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7917),
                            IsActive = false,
                            LogoImg = "/images/countries/Marshall_Islands.jpg",
                            Name = "Marshall Islands"
                        },
                        new
                        {
                            Id = 89,
                            Code = "MQ",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7918),
                            IsActive = false,
                            LogoImg = "/images/countries/Martinique.jpg",
                            Name = "Martinique"
                        },
                        new
                        {
                            Id = 90,
                            Code = "MR",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7920),
                            IsActive = false,
                            LogoImg = "/images/countries/Mauritania.jpg",
                            Name = "Mauritania"
                        },
                        new
                        {
                            Id = 91,
                            Code = "MU",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7920),
                            IsActive = false,
                            LogoImg = "/images/countries/Mauritius.jpg",
                            Name = "Mauritius"
                        },
                        new
                        {
                            Id = 92,
                            Code = "MX",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7921),
                            IsActive = false,
                            LogoImg = "/images/countries/Mexico.jpg",
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = 93,
                            Code = "FM",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7922),
                            IsActive = false,
                            LogoImg = "/images/countries/Micronesia.jpg",
                            Name = "Micronesia"
                        },
                        new
                        {
                            Id = 94,
                            Code = "MN",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7923),
                            IsActive = false,
                            LogoImg = "/images/countries/Mongolia.jpg",
                            Name = "Mongolia"
                        },
                        new
                        {
                            Id = 95,
                            Code = "MA",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7924),
                            IsActive = false,
                            LogoImg = "/images/countries/Morocco.jpg",
                            Name = "Morocco"
                        },
                        new
                        {
                            Id = 96,
                            Code = "MZ",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7925),
                            IsActive = false,
                            LogoImg = "/images/countries/Mozambique.jpg",
                            Name = "Mozambique"
                        },
                        new
                        {
                            Id = 97,
                            Code = "MM",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7925),
                            IsActive = false,
                            LogoImg = "/images/countries/Myanmar.jpg",
                            Name = "Myanmar"
                        },
                        new
                        {
                            Id = 98,
                            Code = "NA",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7926),
                            IsActive = false,
                            LogoImg = "/images/countries/Namibia.jpg",
                            Name = "Namibia"
                        },
                        new
                        {
                            Id = 99,
                            Code = "NR",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7927),
                            IsActive = false,
                            LogoImg = "/images/countries/Nauru.jpg",
                            Name = "Nauru"
                        },
                        new
                        {
                            Id = 100,
                            Code = "NL",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7927),
                            IsActive = false,
                            LogoImg = "/images/countries/Netherlands.jpg",
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = 101,
                            Code = "AN",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7928),
                            IsActive = false,
                            LogoImg = "/images/countries/Netherlands_Antilles.jpg",
                            Name = "Netherlands Antilles"
                        },
                        new
                        {
                            Id = 102,
                            Code = "NC",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7929),
                            IsActive = false,
                            LogoImg = "/images/countries/New_Caledonia.jpg",
                            Name = "New Caledonia"
                        },
                        new
                        {
                            Id = 103,
                            Code = "NZ",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7930),
                            IsActive = false,
                            LogoImg = "/images/countries/New_Zealand.jpg",
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = 104,
                            Code = "NI",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7931),
                            IsActive = false,
                            LogoImg = "/images/countries/Nicaragua.jpg",
                            Name = "Nicaragua"
                        },
                        new
                        {
                            Id = 105,
                            Code = "NE",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7932),
                            IsActive = false,
                            LogoImg = "/images/countries/Niger.jpg",
                            Name = "Niger"
                        },
                        new
                        {
                            Id = 106,
                            Code = "NG",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7932),
                            IsActive = false,
                            LogoImg = "/images/countries/Nigeria.jpg",
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = 107,
                            Code = "NO",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7933),
                            IsActive = false,
                            LogoImg = "/images/countries/Norway.jpg",
                            Name = "Norway"
                        },
                        new
                        {
                            Id = 108,
                            Code = "OM",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7934),
                            IsActive = false,
                            LogoImg = "/images/countries/Oman.jpg",
                            Name = "Oman"
                        },
                        new
                        {
                            Id = 109,
                            Code = "PK",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7935),
                            IsActive = false,
                            LogoImg = "/images/countries/Pakistan.jpg",
                            Name = "Pakistan"
                        },
                        new
                        {
                            Id = 110,
                            Code = "PW",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7935),
                            IsActive = false,
                            LogoImg = "/images/countries/Palau.jpg",
                            Name = "Palau"
                        },
                        new
                        {
                            Id = 111,
                            Code = "PA",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7936),
                            IsActive = false,
                            LogoImg = "/images/countries/Panama.jpg",
                            Name = "Panama"
                        },
                        new
                        {
                            Id = 112,
                            Code = "PG",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7937),
                            IsActive = false,
                            LogoImg = "/images/countries/Papua_New_Guinea.jpg",
                            Name = "Papua New Guinea"
                        },
                        new
                        {
                            Id = 113,
                            Code = "PY",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7940),
                            IsActive = false,
                            LogoImg = "/images/countries/Paraguay.jpg",
                            Name = "Paraguay"
                        },
                        new
                        {
                            Id = 114,
                            Code = "PE",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7941),
                            IsActive = false,
                            LogoImg = "/images/countries/Peru.jpg",
                            Name = "Peru"
                        },
                        new
                        {
                            Id = 115,
                            Code = "PH",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7941),
                            IsActive = false,
                            LogoImg = "/images/countries/Philippines.jpg",
                            Name = "Philippines"
                        },
                        new
                        {
                            Id = 116,
                            Code = "PL",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7942),
                            IsActive = false,
                            LogoImg = "/images/countries/Poland.jpg",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 117,
                            Code = "PT",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7943),
                            IsActive = false,
                            LogoImg = "/images/countries/Portugal.jpg",
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = 118,
                            Code = "QA",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7944),
                            IsActive = false,
                            LogoImg = "/images/countries/Qatar.jpg",
                            Name = "Qatar"
                        },
                        new
                        {
                            Id = 119,
                            Code = "CG",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7944),
                            IsActive = false,
                            LogoImg = "/images/countries/RC_Congo.jpg",
                            Name = "RC Congo"
                        },
                        new
                        {
                            Id = 120,
                            Code = "AB",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7945),
                            IsActive = false,
                            LogoImg = "/images/countries/Republic_of_Abkhazia.jpg",
                            Name = "Republic of Abkhazia"
                        },
                        new
                        {
                            Id = 121,
                            Code = "TG",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7946),
                            IsActive = false,
                            LogoImg = "/images/countries/Republic_of_Togo.jpg",
                            Name = "Republic of Togo"
                        },
                        new
                        {
                            Id = 122,
                            Code = "RO",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7947),
                            IsActive = false,
                            LogoImg = "/images/countries/Romania.jpg",
                            Name = "Romania"
                        },
                        new
                        {
                            Id = 123,
                            Code = "RU",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7948),
                            IsActive = false,
                            LogoImg = "/images/countries/Russia.jpg",
                            Name = "Russia"
                        },
                        new
                        {
                            Id = 124,
                            Code = "RW",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7949),
                            IsActive = false,
                            LogoImg = "/images/countries/Rwanda.jpg",
                            Name = "Rwanda"
                        },
                        new
                        {
                            Id = 125,
                            Code = "MF",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7950),
                            IsActive = false,
                            LogoImg = "/images/countries/Saint_Martin.jpg",
                            Name = "Saint Martin"
                        },
                        new
                        {
                            Id = 126,
                            Code = "WS",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7951),
                            IsActive = false,
                            LogoImg = "/images/countries/Samoa.jpg",
                            Name = "Samoa"
                        },
                        new
                        {
                            Id = 127,
                            Code = "SA",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7951),
                            IsActive = false,
                            LogoImg = "/images/countries/Saudi_Arabia.jpg",
                            Name = "Saudi Arabia"
                        },
                        new
                        {
                            Id = 128,
                            Code = "SN",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7973),
                            IsActive = false,
                            LogoImg = "/images/countries/Senegal.jpg",
                            Name = "Senegal"
                        },
                        new
                        {
                            Id = 129,
                            Code = "SC",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7974),
                            IsActive = false,
                            LogoImg = "/images/countries/Seychelles.jpg",
                            Name = "Seychelles"
                        },
                        new
                        {
                            Id = 130,
                            Code = "SL",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7975),
                            IsActive = false,
                            LogoImg = "/images/countries/Sierra_Leone.jpg",
                            Name = "Sierra Leone"
                        },
                        new
                        {
                            Id = 131,
                            Code = "SG",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7977),
                            IsActive = false,
                            LogoImg = "/images/countries/Singapore.jpg",
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = 132,
                            Code = "SX",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7978),
                            IsActive = false,
                            LogoImg = "/images/countries/Sint_Maarten.jpg",
                            Name = "Sint Maarten"
                        },
                        new
                        {
                            Id = 133,
                            Code = "SB",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7979),
                            IsActive = false,
                            LogoImg = "/images/countries/Solomon_Islands.jpg",
                            Name = "Solomon Islands"
                        },
                        new
                        {
                            Id = 134,
                            Code = "SO",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7980),
                            IsActive = false,
                            LogoImg = "/images/countries/Somalia.jpg",
                            Name = "Somalia"
                        },
                        new
                        {
                            Id = 135,
                            Code = "ZA",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7981),
                            IsActive = false,
                            LogoImg = "/images/countries/South_Africa.jpg",
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = 136,
                            Code = "KR",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7982),
                            IsActive = false,
                            LogoImg = "/images/countries/South_Korea.jpg",
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = 137,
                            Code = "SS",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7983),
                            IsActive = false,
                            LogoImg = "/images/countries/South_Sudan.jpg",
                            Name = "South Sudan"
                        },
                        new
                        {
                            Id = 138,
                            Code = "ES",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7983),
                            IsActive = false,
                            LogoImg = "/images/countries/Spain.jpg",
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 139,
                            Code = "LK",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7986),
                            IsActive = false,
                            LogoImg = "/images/countries/Sri_Lanka.jpg",
                            Name = "Sri Lanka"
                        },
                        new
                        {
                            Id = 140,
                            Code = "KN",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7987),
                            IsActive = false,
                            LogoImg = "/images/countries/St._Kitts.jpg",
                            Name = "St. Kitts"
                        },
                        new
                        {
                            Id = 141,
                            Code = "LC",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7988),
                            IsActive = false,
                            LogoImg = "/images/countries/St._Lucia.jpg",
                            Name = "St. Lucia"
                        },
                        new
                        {
                            Id = 142,
                            Code = "VC",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7988),
                            IsActive = false,
                            LogoImg = "/images/countries/St._Vincent.jpg",
                            Name = "St. Vincent"
                        },
                        new
                        {
                            Id = 143,
                            Code = "SD",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7989),
                            IsActive = false,
                            LogoImg = "/images/countries/Sudan.jpg",
                            Name = "Sudan"
                        },
                        new
                        {
                            Id = 144,
                            Code = "SR",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7990),
                            IsActive = false,
                            LogoImg = "/images/countries/Suriname.jpg",
                            Name = "Suriname"
                        },
                        new
                        {
                            Id = 145,
                            Code = "SE",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7991),
                            IsActive = false,
                            LogoImg = "/images/countries/Sweden.jpg",
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = 146,
                            Code = "TW",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7991),
                            IsActive = false,
                            LogoImg = "/images/countries/Taiwan.jpg",
                            Name = "Taiwan"
                        },
                        new
                        {
                            Id = 147,
                            Code = "TJ",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7992),
                            IsActive = false,
                            LogoImg = "/images/countries/Tajikistan.jpg",
                            Name = "Tajikistan"
                        },
                        new
                        {
                            Id = 148,
                            Code = "TZ",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7993),
                            IsActive = false,
                            LogoImg = "/images/countries/Tanzania.jpg",
                            Name = "Tanzania"
                        },
                        new
                        {
                            Id = 149,
                            Code = "TH",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7994),
                            IsActive = false,
                            LogoImg = "/images/countries/Thailand.jpg",
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = 150,
                            Code = "TO",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7995),
                            IsActive = false,
                            LogoImg = "/images/countries/Tonga.jpg",
                            Name = "Tonga"
                        },
                        new
                        {
                            Id = 151,
                            Code = "TT",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7995),
                            IsActive = false,
                            LogoImg = "/images/countries/Trinidad.jpg",
                            Name = "Trinidad"
                        },
                        new
                        {
                            Id = 152,
                            Code = "TN",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7996),
                            IsActive = false,
                            LogoImg = "/images/countries/Tunisia.jpg",
                            Name = "Tunisia"
                        },
                        new
                        {
                            Id = 153,
                            Code = "TR",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7997),
                            IsActive = false,
                            LogoImg = "/images/countries/Turkey.jpg",
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = 154,
                            Code = "TM",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7998),
                            IsActive = false,
                            LogoImg = "/images/countries/Turkmenistan.jpg",
                            Name = "Turkmenistan"
                        },
                        new
                        {
                            Id = 155,
                            Code = "TC",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7998),
                            IsActive = false,
                            LogoImg = "/images/countries/Turks_and_Caicos_Islands.jpg",
                            Name = "Turks and Caicos Islands"
                        },
                        new
                        {
                            Id = 156,
                            Code = "TV",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(7999),
                            IsActive = false,
                            LogoImg = "/images/countries/Tuvalu.jpg",
                            Name = "Tuvalu"
                        },
                        new
                        {
                            Id = 157,
                            Code = "AE",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(8000),
                            IsActive = false,
                            LogoImg = "/images/countries/UAE.jpg",
                            Name = "UAE"
                        },
                        new
                        {
                            Id = 158,
                            Code = "UG",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(8001),
                            IsActive = false,
                            LogoImg = "/images/countries/Uganda.jpg",
                            Name = "Uganda"
                        },
                        new
                        {
                            Id = 159,
                            Code = "UA",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(8002),
                            IsActive = false,
                            LogoImg = "/images/countries/Ukraine.jpg",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 160,
                            Code = "US",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(8003),
                            IsActive = false,
                            LogoImg = "/images/countries/United_States_of_America.jpg",
                            Name = "United States of America"
                        },
                        new
                        {
                            Id = 161,
                            Code = "UY",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(8004),
                            IsActive = false,
                            LogoImg = "/images/countries/Uruguay.jpg",
                            Name = "Uruguay"
                        },
                        new
                        {
                            Id = 162,
                            Code = "VU",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(8004),
                            IsActive = false,
                            LogoImg = "/images/countries/Vanuatu.jpg",
                            Name = "Vanuatu"
                        },
                        new
                        {
                            Id = 163,
                            Code = "VE",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(8005),
                            IsActive = false,
                            LogoImg = "/images/countries/Venezuela.jpg",
                            Name = "Venezuela"
                        },
                        new
                        {
                            Id = 164,
                            Code = "VN",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(8006),
                            IsActive = false,
                            LogoImg = "/images/countries/Vietnam.jpg",
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = 165,
                            Code = "YE",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(8007),
                            IsActive = false,
                            LogoImg = "/images/countries/Yemen.jpg",
                            Name = "Yemen"
                        },
                        new
                        {
                            Id = 166,
                            Code = "ZM",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(8007),
                            IsActive = false,
                            LogoImg = "/images/countries/Zambia.jpg",
                            Name = "Zambia"
                        },
                        new
                        {
                            Id = 167,
                            Code = "",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(8008),
                            IsActive = false,
                            LogoImg = "/images/countries/Zanzibar.jpg",
                            Name = "Zanzibar"
                        },
                        new
                        {
                            Id = 168,
                            Code = "ZW",
                            CreatedDate = new DateTime(2025, 2, 9, 18, 18, 14, 309, DateTimeKind.Local).AddTicks(8009),
                            IsActive = false,
                            LogoImg = "/images/countries/Zimbabwe.jpg",
                            Name = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.YRTDesignation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("YRTDesignation");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.YRTMaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGlobal")
                        .HasColumnType("bit");

                    b.Property<string>("LogoImg")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("YRTMaker");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.YRTUserReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImg")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("UserScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("YRTUserReview");
                });

            modelBuilder.Entity("YRTJapan.Core.Entities.YRTWebsiteConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebConfigDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebConfigImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WebConfigTitle")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("WebPageName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("YRTWebsiteConfiguration");
                });

            modelBuilder.Entity("YRTJapan.Core.Product", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("19740e53-38b7-40df-8db1-51113432a5d0"),
                            Author = "Corey, James S. A.",
                            CategoryId = new Guid("7e680871-5437-4bea-89a6-fc050f006953"),
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6521),
                            Description = "<p>Humanity has colonized the solar system&mdash;Mars, the Moon, the Asteroid Belt and beyond&mdash;but the stars are still out of our reach.<br><br>Jim Holden is XO of an ice miner making runs from the rings of Saturn to the mining stations of the Belt. When he and his crew stumble upon a derelict ship, the&nbsp;<em>Scopuli</em>, they find themselves in possession of a secret they never wanted. A secret that someone is willing to kill for&mdash;and kill on a scale unfathomable to Jim and his crew. War is brewing in the system unless he can find out who left the ship and why.<br><br>Detective Miller is looking for a girl. One girl in a system of billions, but her parents have money and money talks. When the trail leads him to the&nbsp;<em>Scopuli</em>&nbsp;and rebel sympathizer Holden, he realizes that this girl may be the key to everything.<br><br>Holden and Miller must thread the needle between the Earth government, the Outer Planet revolutionaries, and secretive corporations&mdash;and the odds are against them. But out in the Belt, the rules are different, and one small ship can change the fate of the universe.</p>",
                            ISBN = "978-0-316-12908-4",
                            ImageUrl = "\\images\\product\\LeviathanWakes.jpg",
                            ListPrice = 300000.0,
                            Price = 290000.0,
                            Price100 = 260000.0,
                            Price50 = 280000.0,
                            Title = "Leviathan Wakes",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6521)
                        },
                        new
                        {
                            Id = new Guid("fd844ad0-67b3-440d-a910-bc2061f1e768"),
                            Author = "Corey, James S. A.",
                            CategoryId = new Guid("7e680871-5437-4bea-89a6-fc050f006953"),
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6537),
                            Description = "<p>We are not alone. On Ganymede, breadbasket of the outer planets, a Martian marine watches as her platoon is slaughtered by a monstrous supersoldier. On Earth, a high-level politician struggles to prevent interplanetary war from reigniting. And on Venus, an alien protomolecule has overrun the planet, wreaking massive, mysterious changes and threatening to spread out into the solar system.<br><br>In the vast wilderness of space, James Holden and the crew of the&nbsp;<em>Rocinante</em> have been keeping the peace for the Outer Planets Alliance. When they agree to help a scientist search war-torn Ganymede for a missing child, the future of humanity rests on whether a single ship can prevent an alien invasion that may have already begun.</p>",
                            ISBN = "978-0-316-12906-0",
                            ImageUrl = "\\images\\product\\CalibansWar.jpg",
                            ListPrice = 310000.0,
                            Price = 295000.0,
                            Price100 = 265000.0,
                            Price50 = 285000.0,
                            Title = "Caliban's War",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6537)
                        },
                        new
                        {
                            Id = new Guid("790c3df3-c244-40f6-95dc-106f14ba9f3c"),
                            Author = "Corey, James S. A.",
                            CategoryId = new Guid("7e680871-5437-4bea-89a6-fc050f006953"),
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6541),
                            Description = "<p>Abaddon's Gate is the third book in the New York Times bestselling Expanse series.<br><br>For generations, the solar system - Mars, the Moon, the Asteroid Belt - was humanity's great frontier. Until now. The alien artefact working through its program under the clouds of Venus has emerged to build a massive structure outside the orbit of Uranus: a gate that leads into a starless dark.<br><br>Jim Holden and the crew of the Rocinante are part of a vast flotilla of scientific and military ships going out to examine the artefact. But behind the scenes, a complex plot is unfolding, with the destruction of Holden at its core. As the emissaries of the human race try to find whether the gate is an opportunity or a threat, the greatest danger is the one they brought with them.</p>",
                            ISBN = "978-0-316-12907-7",
                            ImageUrl = "\\images\\product\\AbaddonsGate.jpg",
                            ListPrice = 320000.0,
                            Price = 300000.0,
                            Price100 = 275000.0,
                            Price50 = 290000.0,
                            Title = "Abaddon's Gate",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6541)
                        },
                        new
                        {
                            Id = new Guid("6b9f53bc-c85d-48f0-8541-a74f4f50a42c"),
                            Author = "Corey, James S. A.",
                            CategoryId = new Guid("7e680871-5437-4bea-89a6-fc050f006953"),
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6543),
                            Description = "<p>The gates have opened the way to thousands of habitable planets, and the land rush has begun. Settlers stream out from humanity's home planets in a vast, poorly controlled flood, landing on a new world. Among them, the Rocinante, haunted by the vast, posthuman network of the protomolecule as they investigate what destroyed the great intergalactic society that built the gates and the protomolecule.<br><br>But Holden and his crew must also contend with the growing tensions between the settlers and the company which owns the official claim to the planet. Both sides will stop at nothing to defend what's theirs, but soon a terrible disease strikes and only Holden - with help from the ghostly Detective Miller - can find the cure.</p>",
                            ISBN = "978-0-316-21762-0",
                            ImageUrl = "\\images\\product\\CibolaBurn.jpg",
                            ListPrice = 270000.0,
                            Price = 260000.0,
                            Price100 = 240000.0,
                            Price50 = 250000.0,
                            Title = "Cibola Burn",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6544)
                        },
                        new
                        {
                            Id = new Guid("30d77372-9dc6-4823-afbb-d253d4a4c341"),
                            Author = "Corey, James S. A.",
                            CategoryId = new Guid("7e680871-5437-4bea-89a6-fc050f006953"),
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6546),
                            Description = "<p>The fifth novel in Corey's New York Times bestselling Expanse series--now being produced for television by the SyFy Channel!<br><br>A thousand worlds have opened, and the greatest land rush in human history has begun. As wave after wave of colonists leave, the power structures of the old solar system begin to buckle.<br><br>Ships are disappearing without a trace. Private armies are being secretly formed. The sole remaining protomolecule sample is stolen. Terrorist attacks previously considered impossible bring the inner planets to their knees. The sins of the past are returning to exact a terrible price.<br><br>And as a new human order is struggling to be born in blood and fire, James Holden and the crew of the Rocinante must struggle to survive and get back to the only home they have left.</p>",
                            ISBN = "978-0-316-21758-3",
                            ImageUrl = "\\images\\product\\NemesisGames.jpg",
                            ListPrice = 300000.0,
                            Price = 290000.0,
                            Price100 = 260000.0,
                            Price50 = 280000.0,
                            Title = "Nemesis Games",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6546)
                        },
                        new
                        {
                            Id = new Guid("5dcff174-612e-4831-b637-8d10062bedca"),
                            Author = "Corey, James S. A.",
                            CategoryId = new Guid("7e680871-5437-4bea-89a6-fc050f006953"),
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6550),
                            Description = "<p>A revolution brewing for generations has begun in fire. It will end in blood.</p>\r\n<p>The Free Navy - a violent group of Belters in black-market military ships - has crippled the Earth and begun a campaign of piracy and violence among the outer planets. The colony ships heading for the thousand new worlds on the far side of the alien ring gates are easy prey, and no single navy remains strong enough to protect them.</p>\r\n<p>James Holden and his crew know the strengths and weaknesses of this new force better than anyone. Outnumbered and outgunned, the embattled remnants of the old political powers call on the&nbsp;<em>Rocinante&nbsp;</em>for a desperate mission to reach Medina Station at the heart of the gate network.</p>\r\n<p>But the new alliances are as flawed as the old, and the struggle for power has only just begun. As the chaos grows, an alien mystery deepens. Pirate fleets, mutiny and betrayal may be the least of the&nbsp;<em>Rocinante</em>'s problems. And in the uncanny spaces past the ring gates, the choices of a few damaged and desperate people may determine the fate of more than just humanity.</p>",
                            ISBN = "978-0-316-33474-7",
                            ImageUrl = "\\images\\product\\BabylonsAshes.jpg",
                            ListPrice = 320000.0,
                            Price = 300000.0,
                            Price100 = 275000.0,
                            Price50 = 290000.0,
                            Title = "Babylon's Ashes",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6551)
                        },
                        new
                        {
                            Id = new Guid("98a66dcf-9122-4322-b585-1299d40d38e8"),
                            Author = "Corey, James S. A.",
                            CategoryId = new Guid("7e680871-5437-4bea-89a6-fc050f006953"),
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6556),
                            Description = "<p>In the thousand-sun network of humanity's expansion, new colony worlds are struggling to find their way. Every new planet lives on a knife edge between collapse and wonder, and the crew of the aging gunship Rocinante have their hands more than full keeping the fragile peace.<br><br>In the vast space between Earth and Jupiter, the inner planets and belt have formed a tentative and uncertain alliance still haunted by a history of wars and prejudices. On the lost colony world of Laconia, a hidden enemy has a new vision for all of humanity and the power to enforce it.<br><br>New technologies clash with old as the history of human conflict returns to its ancient patterns of war and subjugation. But human nature is not the only enemy, and the forces being unleashed have their own price. A price that will change the shape of humanity -- and of the Rocinante -- unexpectedly and forever...</p>",
                            ISBN = "978-0-316-33283-5",
                            ImageUrl = "\\images\\product\\PersepolisRising.jpg",
                            ListPrice = 300000.0,
                            Price = 290000.0,
                            Price100 = 260000.0,
                            Price50 = 280000.0,
                            Title = "Persepolis Rising	",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6556)
                        },
                        new
                        {
                            Id = new Guid("6e23dc61-a9ef-43d9-9f62-457c5bdef317"),
                            Author = "Corey, James S. A.",
                            CategoryId = new Guid("7e680871-5437-4bea-89a6-fc050f006953"),
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6559),
                            Description = "<p>Thirteen hundred gates have opened to solar systems around the galaxy. But as humanity builds its interstellar empire in the alien ruins, the mysteries and threats grow deeper.<br><br>In the dead systems where gates lead to stranger things than alien planets, Elvi Okoye begins a desperate search to discover the nature of a genocide that happened before the first human beings existed, and to find weapons to fight a war against forces at the edge of the imaginable. But the price of that knowledge may be higher than she can pay.<br><br>At the heart of the empire, Teresa Duarte prepares to take on the burden of her father's godlike ambition. The sociopathic scientist Paolo Cort&aacute;zar and the Mephistophelian prisoner James Holden are only two of the dangers in a palace thick with intrigue, but Teresa has a mind of her own and secrets even her father the emperor doesn't guess.<br><br>And throughout the wide human empire, the scattered crew of the Rocinante fights a brave rear-guard action against Duarte's authoritarian regime. Memory of the old order falls away, and a future under Laconia's eternal rule -- and with it, a battle that humanity can only lose - seems more and more certain. Because against the terrors that lie between worlds, courage and ambition will not be enough...</p>",
                            ISBN = "978-0-316-33286-6",
                            ImageUrl = "\\images\\product\\TiamatsWrath.jpg",
                            ListPrice = 320000.0,
                            Price = 300000.0,
                            Price100 = 275000.0,
                            Price50 = 290000.0,
                            Title = "Tiamat's Wrath",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6560)
                        },
                        new
                        {
                            Id = new Guid("fc935fb1-5c4f-490c-8704-e8de365b4d3f"),
                            Author = "Corey, James S. A.",
                            CategoryId = new Guid("7e680871-5437-4bea-89a6-fc050f006953"),
                            Created = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6566),
                            Description = "<p>The Laconian Empire has fallen, setting the thirteen hundred solar systems free from the rule of Winston Duarte. But the ancient enemy that killed the gate builders is awake, and the war against our universe has begun again.<br><br>In the dead system of Adro, Elvi Okoye leads a desperate scientific mission to understand what the gate builders were and what destroyed them, even if it means compromising herself and the half-alien children who bear the weight of her investigation. Through the wide-flung systems of humanity, Colonel Aliana Tanaka hunts for Duarte&rsquo;s missing daughter. . . and the shattered emperor himself. And on the Rocinante, James Holden and his crew struggle to build a future for humanity out of the shards and ruins of all that has come before.<br><br>As nearly unimaginable forces prepare to annihilate all human life, Holden and a group of unlikely allies discover a last, desperate chance to unite all of humanity, with the promise of a vast galactic civilization free from wars, factions, lies, and secrets if they win.<br><br>But the price of victory may be worse than the cost of defeat.</p>",
                            ISBN = "978-0-316-33291-0",
                            ImageUrl = "\\images\\product\\LeviathanFalls.jpg",
                            ListPrice = 330000.0,
                            Price = 320000.0,
                            Price100 = 300000.0,
                            Price50 = 310000.0,
                            Title = "Leviathan Falls",
                            Updated = new DateTime(2025, 2, 9, 18, 18, 14, 365, DateTimeKind.Local).AddTicks(6566)
                        });
                });

            modelBuilder.Entity("YRTJapan.Core.ShoppingCart", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("YRTJapan.Core.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("YRTJapan.Core.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YRTJapan.Core.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("YRTJapan.Core.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YRTJapan.Core.Product", b =>
                {
                    b.HasOne("YRTJapan.Core.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("YRTJapan.Core.ShoppingCart", b =>
                {
                    b.HasOne("YRTJapan.Core.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YRTJapan.Core.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
