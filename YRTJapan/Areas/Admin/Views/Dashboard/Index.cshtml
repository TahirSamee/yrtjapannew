@model YRTJapan.Core.ViewModels.DashboardViewModel

<section class="search-wrapper pl-5 pr-5">
    <div class="">
        <div class="row mt-3">
            <div style="margin-left:70%"><partial name="_LoginPartial" /></div>
            <div class="right-content" style="width: 100%;">
                <div id="dashboard" class="content-section active">
                    
                    <h3>Dashboard</h3>

                    <div class="chart-container">
                        <canvas id="barChart1"></canvas>
                    </div>
                    <div class="chart-container">
                        <canvas id="lineChart1"></canvas>
                    </div>
                    <div class="chart-container">
                        <canvas id="barChart2"></canvas>
                    </div>
                    <div class="chart-container">
                        <canvas id="lineChart2"></canvas>
                    </div>
                </div>
                <div id="users" class="content-section">
                    <h3>Users</h3>
                    <div class="table-container">
                        <table class="table table-striped" id="usersTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>User ID</th>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var user in Model.Users)
                                {
                                    <tr>
                                        <td>123</td>
                                        <td>@user.UserName</td>
                                        <td>@user.Email</td>
                                        <td>
                                            <button class="btn btn-warning btn-sm" onclick="openEditUserModal('@user.Id', '@user.UserName', '@user.Email')">Edit</button>
                                            <button class="btn btn-danger btn-sm" onclick="deleteUser('@user.Id')">Delete</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div id="inquires" class="content-section">
                    <h3>Inquires</h3>
                    <div class="table-container">
                        <table class="table table-striped" id="inquiresTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Country</th>
                                    <th>Email</th>
                                    <th>Phone Number</th>
                                    <th>Message</th>
                                    <th>Car ID</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var quote in Model.Quotes)
                                {
                                    <tr id="row-@quote.Id">
                                        <td>@quote.Id</td>
                                        <td>@quote.Name</td>
                                        <td>@quote.Country</td>
                                        <td>@quote.Email</td>
                                        <td>@quote.PhoneNumber</td>
                                        <td>@quote.Message</td>
                                        <td>@quote.CarId</td>
                                        <td>
                                            <button class="btn btn-warning btn-sm" onclick="openEditQuoteModal(@quote.Id, '@quote.Name', '@quote.Country', '@quote.Email', '@quote.PhoneNumber', '@quote.Message', '@quote.CarId')"><i class="bi bi-pencil"></i></button>
                                            <button class="btn btn-danger btn-sm" onclick="deleteQuote(@quote.Id)"><i class="bi bi-trash"></i></button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div id="favourites" class="content-section">
                    <h3>Favourites</h3>
                    <div class="table-container">
                        <table class="table table-striped" id="favouritesTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Make Name</th>
                                    <th>Model Name</th>
                                    <th>Year</th>
                                    <th>User ID</th>
                                    <th>Price</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var favourite in Model.Favourites)
                                {
                                    <tr id="row-@favourite.Id">
                                        <td>@favourite.Id</td>
                                        <td>@favourite.MakeName</td>
                                        <td>@favourite.ModelName</td>
                                        <td>@favourite.Year</td>
                                        <td>@favourite.UserId</td>
                                        <td>@favourite.Price</td>
                                        <td>
                                            <button class="btn btn-warning btn-sm" onclick="openEditFavouriteModal(@favourite.Id, '@favourite.MakeName', '@favourite.ModelName', '@favourite.Year', '@favourite.UserId', '@favourite.Price')">Edit</button>
                                            <button class="btn btn-danger btn-sm" onclick="deleteFavourite(@favourite.Id)">Delete</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Edit Quote Modal -->
<div class="modal fade" id="editQuoteModal" tabindex="-1" role="dialog" aria-labelledby="editQuoteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editQuoteModalLabel">Edit Quote</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editQuoteForm">
                    <input type="hidden" id="editQuoteId" name="id" />
                    <div class="form-group">
                        <label for="editQuoteName">Name</label>
                        <input type="text" class="form-control" id="editQuoteName" name="name" required />
                    </div>
                    <div class="form-group">
                        <label for="editQuoteCountry">Country</label>
                        <input type="text" class="form-control" id="editQuoteCountry" name="country" required />
                    </div>
                    <div class="form-group">
                        <label for="editQuoteEmail">Email</label>
                        <input type="email" class="form-control" id="editQuoteEmail" name="email" required />
                    </div>
                    <div class="form-group">
                        <label for="editQuotePhoneNumber">Phone Number</label>
                        <input type="text" class="form-control" id="editQuotePhoneNumber" name="phoneNumber" required />
                    </div>
                    <div class="form-group">
                        <label for="editQuoteMessage">Message</label>
                        <textarea class="form-control" id="editQuoteMessage" name="message" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="editQuoteCarId">Car ID</label>
                        <input type="text" class="form-control" id="editQuoteCarId" name="carId" required />
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Favourite Modal -->
<div class="modal fade" id="editFavouriteModal" tabindex="-1" role="dialog" aria-labelledby="editFavouriteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editFavouriteModalLabel">Edit Favourite</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
           
            <div class="modal-body">
                <form id="editFavouriteForm">
                    <input type="hidden" id="editFavouriteId" name="id" />
                    <div class="form-group">
                        <label for="editFavouriteMakeName">Make Name</label>
                        <input type="text" class="form-control" id="editFavouriteMakeName" name="makeName" required />
                    </div>
                    <div class="form-group">
                        <label for="editFavouriteModelName">Model Name</label>
                        <input type="text" class="form-control" id="editFavouriteModelName" name="modelName" required />
                    </div>
                    <div class="form-group">
                        <label for="editFavouriteYear">Year</label>
                        <input type="text" class="form-control" id="editFavouriteYear" name="year" required />
                    </div>
                    <div class="form-group">
                        <label for="editFavouriteUserId">User ID</label>
                        <input type="text" class="form-control" id="editFavouriteUserId" name="userId" required />
                    </div>
                    <div class="form-group">
                        <label for="editFavouritePrice">Price</label>
                        <input type="text" class="form-control" id="editFavouritePrice" name="price" required />
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" id="editUserId" name="id" />
                    <div class="form-group">
                        <label for="editUserName">User Name</label>
                        <input type="text" class="form-control" id="editUserName" name="userName" required />
                    </div>
                    <div class="form-group">
                        <label for="editUserEmail">Email</label>
                        <input type="email" class="form-control" id="editUserEmail" name="email" required />
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
            function showSection(sectionId) {
            // Hide all sections
            var sections = document.getElementsByClassName('content-section');
            for (var i = 0; i < sections.length; i++) {
                sections[i].classList.remove('active');
            }
            // Show the selected section
            document.getElementById(sectionId).classList.add('active');
            // Store the active section's ID in local storage
            localStorage.setItem('activeSection', sectionId);
        }

        $(document).ready(function () {
            // Retrieve the active section's ID from local storage
            var activeSection = localStorage.getItem('activeSection');
            if (activeSection) {
                showSection(activeSection);
            } else {
                // Default to showing the dashboard section if no section is stored
                showSection('dashboard');
            }

            $('#usersTable').DataTable();
            $('#inquiresTable').DataTable();
            $('#favouritesTable').DataTable();

            handleResponsiveStyles();
            // Attach event listener for window resize
            window.addEventListener('resize', handleResponsiveStyles);
        });

        var ctxBar1 = document.getElementById('barChart1').getContext('2d');
        var barChart1 = new Chart(ctxBar1, {
            type: 'bar',
            data: {
                labels: ['January', 'February', 'March', 'April', 'May', 'June'],
                datasets: [{
                    label: 'Sales',
                    data: [12, 19, 3, 5, 2, 3],
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Line Chart 1
        var ctxLine1 = document.getElementById('lineChart1').getContext('2d');
        var lineChart1 = new Chart(ctxLine1, {
            type: 'line',
            data: {
                labels: ['January', 'February', 'March', 'April', 'May', 'June'],
                datasets: [{
                    label: 'Revenue',
                    data: [15, 10, 5, 2, 20, 30],
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Bar Chart 2
        var ctxBar2 = document.getElementById('barChart2').getContext('2d');
        var barChart2 = new Chart(ctxBar2, {
            type: 'bar',
            data: {
                labels: ['July', 'August', 'September', 'October', 'November', 'December'],
                datasets: [{
                    label: 'Sales',
                    data: [5, 10, 15, 20, 25, 30],
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Line Chart 2
        var ctxLine2 = document.getElementById('lineChart2').getContext('2d');
        var lineChart2 = new Chart(ctxLine2, {
            type: 'line',
            data: {
                labels: ['July', 'August', 'September', 'October', 'November', 'December'],
                datasets: [{
                    label: 'Revenue',
                    data: [5, 15, 10, 25, 20, 35],
                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        function handleResponsiveStyles() {
             var width = window.innerWidth;
             if (width <= 768) {
                 document.querySelector('.sidebar ul li a span').style.display = 'none';
                 document.querySelector('.sidebar ul li i').style.fontSize = '24px';
                 document.querySelector('.content').style.marginLeft = '0';
             } else {
                 document.querySelector('.sidebar ul li a span').style.display = 'inline';
                 document.querySelector('.sidebar ul li i').style.fontSize = '20px';
                 document.querySelector('.content').style.marginLeft = '15%';
             }
         }


        function openEditQuoteModal(id, name, country, email, phoneNumber, message, carId) {
            $('#editQuoteId').val(id);
            $('#editQuoteName').val(name);
            $('#editQuoteCountry').val(country);
            $('#editQuoteEmail').val(email);
            $('#editQuotePhoneNumber').val(phoneNumber);
            $('#editQuoteMessage').val(message);
            $('#editQuoteCarId').val(carId);
            $('#editQuoteModal').modal('show');
        }

        function openEditFavouriteModal(id, makeName, modelName, year, userId, price) {
            document.activeElement.blur();
            console.log("Opening modal for ID:", id);
            $('#editFavouriteId').val(id);
            $('#editFavouriteMakeName').val(makeName);
            $('#editFavouriteModelName').val(modelName);
            $('#editFavouriteYear').val(year);
            $('#editFavouriteUserId').val(userId);
            $('#editFavouritePrice').val(price);
            $('#editFavouriteModal').modal('show');
        }
        function openEditUserModal(id, name, email) {
            document.activeElement.blur();
            console.log("Opening modal for ID:", id);
            $('#editUserId').val(id);
            $('#editUserName').val(name);
            $('#editUserEmail').val(email);
            $('#editUserModal').modal('show');
        }
        $('#editUserForm').submit(function(event) {
            event.preventDefault();
            const id = $('#editUserId').val();
            const data = $(this).serialize();
            $.ajax({
                url: `/Admin/User/EditFreeQuote/${id}`,
                type: 'POST',
                data: data,
                success: function(response) {
                    console.log(response);
                    if (response.success) {
                        alert('User updated successfully');
                        location.reload();
                    } else {
                        alert('Failed to update User');
                    }
                },
                error: function() {
                    alert('An error occurred while updating the quote');
                }
            });
        });

        $('#editQuoteForm').submit(function(event) {
            event.preventDefault();
            const id = $('#editQuoteId').val();
            const data = $(this).serialize();
            $.ajax({
                url: `/Admin/Inquiry/EditFreeQuote/${id}`,
                type: 'POST',
                data: data,
                success: function(response) {
                    console.log(response);
                    if (response.success) {
                        alert('Quote updated successfully');
                        location.reload();
                    } else {
                        alert('Failed to update quote');
                    }
                },
                error: function() {
                    alert('An error occurred while updating the quote');
                }
            });
        });

        $('#editFavouriteForm').submit(function(event) {
            event.preventDefault();
            const id = $('#editFavouriteId').val();
            const data = $(this).serialize();
            $.ajax({
                url: `/Admin/Favourite/EditFavourite/${id}`,
                type: 'POST',
                data: data,
                success: function(response) {
                    if (response.success) {
                        alert('Favourite updated successfully');
                        location.reload();
                    } else {
                        alert('Failed to update favourite');
                    }
                },
                error: function() {
                    alert('An error occurred while updating the favourite');
                }
            });
        });

        function deleteQuote(id) {
            if (confirm("Are you sure you want to delete this quote?")) {
                $.ajax({
                    url: '/Admin/Inquiry/DeleteFreeQuote',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            var row = $("#quote-" + id);
                            if (row.length > 0) {
                                row.fadeOut(300, function () {
                                    $(this).remove(); // Ensures smooth disappearance
                                });
                            } else {
                                console.warn("Row not found in the DOM!");
                            }
                        } else {
                            alert("Failed to delete the quote.");
                        }
                    },
                    error: function () {
                        alert("An error occurred while deleting the quote.");
                    }
                });
            }
        }

        function deleteFavourite(id) {
            if (confirm("Are you sure you want to delete this favourite?")) {
                fetch(`/Admin/Favourite/DeleteFavourite/${id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert("Failed to delete favourite.");
                    }
                })
                .catch(error => console.error("Error:", error));
            }
        }
            function deleteUser(id) {
            if (confirm("Are you sure you want to delete this favourite?")) {
                fetch(`/Admin/User/DeleteUser/${id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert("Failed to delete favourite.");
                    }
                })
                .catch(error => console.error("Error:", error));
            }
        }
                function editFavourite(id) {
            // Fetch data for the favourite item to be edited
            fetch(`/Admin/Favourite/EditByIdFavourite/${id}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Populating the edit modal with the favourite data
                    // document.getElementById('editFavouriteModalTitle').innerText = `Edit Favourite: ${data.favourite.name}`;
                    // document.getElementById('editFavouriteName').value = data.favourite.name;
                    // document.getElementById('editFavouriteDescription').value = data.favourite.description;

                    // Storing the favourite ID in a hidden field for later use
                    // document.getElementById('editFavouriteId').value = data.favourite.id;

                    // Show the edit modal
                    $('#editFavouriteModal').modal('show');
                } else {
                    alert("Failed to fetch favourite details.");
                }
            })
            .catch(error => console.error("Error:", error));
        }
    </script>
}
